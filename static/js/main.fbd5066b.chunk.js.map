{"version":3,"sources":["shared/common.js","components/Header.js","components/Footer.js","components/BeerItem.js","components/BeerItems.js","components/NavPages.js","pages/Home.js","components/InnerBottomItems.js","shared/hooks.js","pages/Inner.js","App.js","index.js"],"names":["getData","url","a","fetch","response","json","result","Title","Typography","Header","props","pathname","level","Item","to","length","slice","Text","Link","Footer","direction","strong","href","target","GithubOutlined","BeerItem","image_url","name","tagline","brewed","id","lg","span","xs","style","padding","className","src","alt","BeerItems","renderingData","isLoaded","currentPage","gutter","map","item","key","first_brewed","NavPages","paginate","totalPages","defaultPageSize","current","total","onChange","marginTop","Search","Input","Home","query","changeQuery","placeholder","width","allowClear","value","orientation","color","fontWeight","flat","InnerBottomItems","items","maxRange","useState","setIsLoaded","renderingItems","setRenderingItems","useEffect","randomIds","tempData","min","i","randomInt","Math","round","random","includes","push","int","find","getRandomItems","useBottomItems","amountItems","Inner","location","useLocation","itemParams","useParams","Itemid","Number","curItem","el","undefined","description","brewers_tips","food_pairing","App","data","setData","then","useData","VISIBLE","setRenderingData","setQuery","filtredData","sourceData","filter","toLowerCase","startsWith","ceil","useFiltredData","setCurrentPage","setTotalPages","window","scrollTo","exact","path","e","page","size","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"4QAAaA,EAAO,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEAEEC,MAAMF,GAFR,cAEfG,EAFe,gBAGAA,EAASC,OAHT,cAGfC,EAHe,yBAKdA,GALc,2CAAH,sD,0BCIZC,EAAUC,IAAVD,MAEKE,EAAS,SAACC,GAAW,IAEvBC,EAAYD,EAAZC,SAEP,OACI,gCACI,kBAACJ,EAAD,CAAOK,MAAO,GAAd,iBAGA,kBAAC,IAAD,KACI,kBAAC,IAAWC,KAAZ,KACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAGAH,EAASI,OAAS,EACd,kBAAC,IAAWF,KAAZ,KACKF,EAASK,MAAM,IAEtB,Q,kBCpBdC,EAAeT,IAAfS,KAAMC,EAASV,IAATU,KAEDC,EAAS,WAElB,OACI,gCAEI,kBAAC,IAAD,CAAOC,UAAU,YACb,kBAACH,EAAD,CAAMI,QAAM,GAAZ,yCAC0C,kBAACH,EAAD,CAAMI,KAAK,+BAA+BC,OAAO,UAAjD,UAE1C,kBAACN,EAAD,KACI,kBAACO,EAAA,EAAD,MADJ,IACuB,kBAACN,EAAD,CAAMI,KAAK,+CAA+CC,OAAO,UAAjE,kB,yCCZ/BhB,EAAgBC,IAAhBD,MAAOU,EAAST,IAATS,KAEFQ,EAAW,SAACf,GAAW,IAEzBgB,EAAwChB,EAAxCgB,UAAWC,EAA6BjB,EAA7BiB,KAAMC,EAAuBlB,EAAvBkB,QAASC,EAAcnB,EAAdmB,OAAQC,EAAMpB,EAANoB,GAEzC,OACI,oCACI,kBAAC,IAAD,CAAKC,GAAI,CAAEC,KAAM,GAAKC,GAAI,CAAED,KAAM,IAAME,MAAO,CAACC,QAAS,QACrD,kBAAC,IAAD,CAAMC,UAAU,aACZ,yBAAKA,UAAU,iBACX,yBACIC,IAAKX,EACLY,IAAKX,KAGb,yBAAKS,UAAU,oBACX,kBAAC,EAAD,CAAOxB,MAAO,GAAIe,IAEtB,yBAAKS,UAAU,sBACX,kBAAC,EAAD,CAAMf,QAAM,GAAEO,IAElB,yBAAKQ,UAAU,mBACX,kBAAC,EAAD,uBACA,kBAAC,EAAD,CAAMf,QAAM,GAAEQ,IAElB,kBAAC,IAAD,CAAMf,GAAE,aAAQgB,IAAhB,iBCzBPS,EAAY,SAAC7B,GAAW,IAC1B8B,EAAwC9B,EAAxC8B,cAAeC,EAAyB/B,EAAzB+B,SAAUC,EAAehC,EAAfgC,YAEhC,OAAGD,GAAYD,EAAczB,OAAS,EAE9B,kBAAC,IAAD,CAAK4B,OAAQ,IAELH,EAAcE,GAAaE,KAAI,SAAAC,GAC3B,OACI,kBAAC,EAAD,CACIC,IAAKD,EAAKf,GACVJ,UAAWmB,EAAKnB,UAChBC,KAAMkB,EAAKlB,KACXC,QAASiB,EAAKjB,QACdC,OAAQgB,EAAKE,aACbjB,GAAIe,EAAKf,SAQ1B,kBAAC,IAAD,O,SCzBFkB,EAAW,SAACtC,GAAW,IACxBgC,EAAsChC,EAAtCgC,YAAaO,EAAyBvC,EAAzBuC,SAAUC,EAAexC,EAAfwC,WAE/B,OACI,oCACI,kBAAC,IAAD,CACIC,gBAAiB,EACjBC,QAASV,EACTW,MAAOH,EACPI,SAAUL,EACVf,MAAO,CAAEqB,UAAW,Y,kBCR5BC,EAAWC,IAAXD,OAEKE,EAAO,SAAChD,GAAW,IAGxBiD,EAOAjD,EAPAiD,MACAC,EAMAlD,EANAkD,YACApB,EAKA9B,EALA8B,cACAE,EAIAhC,EAJAgC,YACAD,EAGA/B,EAHA+B,SACAS,EAEAxC,EAFAwC,WACAD,EACAvC,EADAuC,SAGJ,OACI,6BACI,kBAACO,EAAD,CACIK,YAAY,iBACZ3B,MAAO,CAAE4B,MAAO,KAChBC,YAAU,EACVC,MAAOL,EACPL,SAAUM,IAEd,kBAAC,IAAD,CACIK,YAAY,SACZ/B,MAAO,CAAEgC,MAAO,OAAQC,WAAY,SAEnC3B,EAAc4B,OAAOrD,OAJ1B,gBAMA,kBAAC,EAAD,CACIyB,cAAeA,EACfE,YAAaA,EACbD,SAAUA,IAEbS,EAAa,EACV,kBAAC,EAAD,CACIR,YAAaA,EAAc,EAC3BO,SAAUA,EACVC,WAAYA,IAElB,OCxCDmB,EAAmB,SAAC3D,GAAW,IAAD,ECmBb,SAAC4D,EAAOC,GAAc,IAAD,EAEfC,oBAAS,GAFM,mBAExC/B,EAFwC,KAE9BgC,EAF8B,OAGHD,mBAAS,IAHN,mBAGxCE,EAHwC,KAGxBC,EAHwB,KA8B/C,OAzBAC,qBAAU,WACN,IAAMC,EAAY,GACZC,EAAW,IAEjB,SAAwBC,EAAKR,GAEzB,IAAI,IAAIS,EAAI,EAAGH,EAAU9D,OAAS,EAAGiE,IAAK,CACtC,IAAIC,EAAaC,KAAKC,MAAOD,KAAKE,UAAYb,EAAWQ,GAAOA,GAE5DF,EAAUQ,SAASJ,IACnBJ,EAAUS,KAAKL,GAIvBJ,EAAUjC,KAAI,SAAA2C,GACV,OAAOT,EAASQ,KAAKhB,EAAMkB,MAAK,SAAA3C,GAAI,OAAIA,EAAI,KAAW0C,SAI/DE,CAAe,EAAGlB,GAClBI,EAAkBG,GAClBL,GAAY,KAEb,CAACH,EAAOC,IAEJ,CAACG,EAAgBjC,GD9CWiD,CAFJhF,EAAvB4D,MAAuB5D,EAAhBiF,aADwB,mBAGhCjB,EAHgC,KAGhBjC,EAHgB,KAKvC,OACI,oCACI,kBAAC,IAAD,CAAKE,OAAQ,IACT,kBAAC,IAAD,CACIsB,YAAY,SACZ/B,MAAO,CAAEgC,MAAO,OAAQC,WAAY,SAFxC,iBAOI1B,EACI,kBAAC,IAAD,CAAKE,OAAQ,IAEL+B,EAAe9B,KAAI,SAAAC,GACf,OACI,kBAAC,EAAD,CACIC,IAAKD,EAAKf,GACVJ,UAAWmB,EAAKnB,UAChBC,KAAMkB,EAAKlB,KACXC,QAASiB,EAAKjB,QACdC,OAAQgB,EAAKE,aACbjB,GAAIe,EAAKf,SAM/B,8CEhCdvB,EAAgBC,IAAhBD,MAAOU,EAAST,IAATS,KAEF2E,EAAQ,SAAClF,GAAW,IACrB4D,EAAiC5D,EAAjC4D,MAAO7B,EAA0B/B,EAA1B+B,SAAUkD,EAAgBjF,EAAhBiF,YAEnBE,EAAWC,cAEXC,EAAaC,cACbC,EAASC,OAAOH,EAAWjE,GAAGd,MAAM,IAEpCmF,EAAU7B,EAAMF,OAAOoB,MAAK,SAACY,GAC/B,OAAOA,EAAGtE,KAAOmE,KAGrB,OAAGxD,QAAwB4D,IAAZF,EAEP,6BACI,kBAAC,IAAD,CAAKxD,OAAQ,IACT,kBAAC,IAAD,CAAKX,KAAM,EAAGI,UAAU,qBACpB,yBACIC,IAAK8D,EAAQzE,UACbY,IAAK6D,EAAQxE,QAGrB,kBAAC,IAAD,CAAKK,KAAM,GAAII,UAAU,uBACrB,kBAAC,EAAD,CAAOxB,MAAO,GAAIuF,EAAQxE,MAC1B,kBAAC,EAAD,CAAOf,MAAO,GAAIuF,EAAQvE,SAC1B,kBAAC,EAAD,CAAOhB,MAAO,GAAd,iBAAgCuF,EAAQpD,cACxC,kBAAC,IAAD,CAASkB,YAAY,SAAS/B,MAAO,CAAEgC,MAAO,OAAQC,WAAY,SAAlE,eACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKnC,KAAM,GAAII,UAAU,gCACrB,kBAAC,IAAD,CAAOhB,UAAU,YACb,kBAAC,EAAD,CAAMC,QAAM,GAAZ,iBACA,kBAAC,EAAD,KAAO8E,EAAQG,eAGvB,kBAAC,IAAD,CAAKtE,KAAM,GAAII,UAAU,gCACrB,kBAAC,IAAD,CAAOhB,UAAU,YACb,kBAAC,EAAD,CAAMC,QAAM,GAAZ,kBACA,kBAAC,EAAD,KAAO8E,EAAQI,iBAI3B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKvE,KAAM,IACP,kBAAC,IAAD,CAAOZ,UAAU,YACb,kBAAC,EAAD,CAAMC,QAAM,GAAZ,iBACA,4BAEQ8E,EAAQK,aAAa5D,KAAI,SAACC,EAAMmC,GAAP,OAAa,wBAAIlC,IAAKkC,GAAInC,UAOvE,kBAAC,IAAD,CAAM/B,GAAG,KAAT,kBAGR,kBAAC,EAAD,CAAkBwD,MAAOA,EAAOqB,YAAaA,KAKjD,yBAAKvD,UAAU,uBACX,kBAAC,IAAD,MACA,yBAAKA,UAAU,6BACX,2CAAgB,kBAAC,EAAD,CAAMf,QAAM,GAAEwE,EAASlF,WACvC,2EAAgD,kBAAC,EAAD,CAAMU,QAAM,GAAEsE,IAC9D,6CAAkB,kBAAC,EAAD,CAAMtE,QAAM,GAAZ,UAEtB,kBAAC,IAAD,CAAMP,GAAG,KAAT,uB,SCwBD2F,G,OA9DH,WAAO,IAAD,EAhBF,WAAO,IAAD,EACMjC,mBAAS,IADf,mBACXkC,EADW,KACLC,EADK,OAEcnC,oBAAS,GAFvB,mBAEX/B,EAFW,KAEDgC,EAFC,KAalB,OAPAG,qBAAU,WACN5E,EAAQ,GAAD,OAhBE,mCAgBF,qBAZM,KAY6B4G,MAAK,SAACtG,GAC5CqG,EAAQrG,GACRmE,GAAY,QAEjB,CAhBc,KAkBV,CAACiC,EAAMjE,GAIWoE,GADX,mBACPH,EADO,KACDjE,EADC,OFpCY,SAACiE,EAAMI,GAAa,IAAD,EACHtC,mBAAS,IADN,mBACtChC,EADsC,KACvBuE,EADuB,OAEnBvC,mBAAS,IAFU,mBAEtCb,EAFsC,KAE/BqD,EAF+B,KAmB7C,OAfApC,qBAAU,WAON,IANA,IAAIqC,EAAc,GAEdC,EAAaR,EAAKS,QAAO,SAAAtE,GAAI,OAC7BA,EAAKlB,KAAKyF,cAAcC,WAAW1D,EAAMyD,kBAGpCpC,EAAI,EAAGA,EAAIE,KAAKoC,KAAKJ,EAAWnG,OAAS+F,GAAU9B,IACxDiC,EAAYjC,GAAKkC,EAAWlG,MAAMgE,EAAI8B,EAAS9B,EAAI8B,EAAUA,GAGjEC,EAAiBE,KAElB,CAACH,EAASJ,EAAM/C,IAEZ,CAACA,EAAOqD,EAAUxE,GEmBgB+E,CAAeb,EApB5C,GAkBE,mBAEP/C,EAFO,KAEAqD,EAFA,KAEUxE,EAFV,OAGwBgC,mBAAS,GAHjC,mBAGP9B,EAHO,KAGM8E,EAHN,OAIsBhD,mBAAS,GAJ/B,mBAIPtB,EAJO,KAIKuE,EAJL,KAMN9G,EAAamF,cAAbnF,SAERiE,qBAAU,WACN6C,EAAcjF,EAAczB,UAC7B,CAACyB,IAEJoC,qBAAU,WACN8C,OAAOC,SAAS,EAAG,GACnBX,EAAS,MACV,CAACrG,EAAUqG,IAYd,OACI,yBAAK5E,UAAU,OACX,yBAAKA,UAAU,aACX,kBAAC,EAAD,CAAQzB,SAAUA,IAElB,8BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOiH,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,CACIlE,MAAOA,EACPC,YAhBR,SAACkE,GACjBd,EAASc,EAAEvG,OAAOyC,OAClByD,EAAcjF,EAAczB,QAC5ByG,EAAe,IAcShF,cAAeA,EACfE,YAAaA,EACbD,SAAUA,EACVQ,SAxBX,SAAC8E,GACdP,EAAeO,EAAO,IAwBE7E,WAAYA,KAIpB,kBAAC,IAAD,CAAO2E,KAAK,QACR,kBAAC,EAAD,CAAOvD,MAAOoC,EAAMjE,SAAUA,EAAUkD,YApE/C,QAyEL,kBAAC,EAAD,MAEA,yBAAKvD,UAAW,YAAcK,EAAW,OAAS,SAC9C,kBAAC,IAAD,CAAMuF,KAAK,eCvF/BC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,CAAQC,SAAUC,oBACd,kBAAC,EAAD,QAGRC,SAASC,eAAe,W","file":"static/js/main.fbd5066b.chunk.js","sourcesContent":["export const getData = async (url) => {\r\n\r\n  const response = await fetch(url);\r\n  const result = await response.json();\r\n\r\n  return result;\r\n};","import React from 'react';\r\nimport { Typography, Breadcrumb } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport const Header = (props) => {\r\n\r\n    const {pathname} = props;\r\n\r\n    return (\r\n        <header>\r\n            <Title level={3}>\r\n                Beer Book App\r\n            </Title>\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item>\r\n                    <Link to=\"/\">Home</Link>\r\n                </Breadcrumb.Item>\r\n                {\r\n                    pathname.length > 1 \r\n                    ?   <Breadcrumb.Item>\r\n                            {pathname.slice(1)}\r\n                        </Breadcrumb.Item>\r\n                    : null\r\n                }\r\n                \r\n            </Breadcrumb>\r\n        </header>\r\n    )\r\n}","import React from 'react';\r\nimport { Typography, Space } from 'antd';\r\nimport { GithubOutlined } from '@ant-design/icons'\r\n\r\nconst { Text, Link } = Typography;\r\n\r\nexport const Footer = () => {\r\n\r\n    return (\r\n        <footer>\r\n\r\n            <Space direction=\"vertical\">\r\n                <Text strong>\r\n                    Made on React, Antd and enthusiasm by <Link href=\"https://github.com/atomr-web\" target=\"_blank\">atomr</Link>\r\n                </Text>\r\n                <Text>\r\n                    <GithubOutlined /> <Link href=\"https://github.com/atomr-web/react-bear-book\" target=\"_blank\">Repository</Link>\r\n                </Text>\r\n            </Space>\r\n\r\n        </footer>\r\n    )\r\n}","import React from \"react\";\r\nimport { Col, Card, Typography } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nexport const BeerItem = (props) => {\r\n\r\n    const {image_url, name, tagline, brewed, id} = props;\r\n\r\n    return (\r\n        <>\r\n            <Col lg={{ span: 6 }} xs={{ span: 12 }} style={{padding: '8px'}}>\r\n                <Card className=\"beer-item\">\r\n                    <div className=\"img-container\">\r\n                        <img\r\n                            src={image_url}\r\n                            alt={name}\r\n                        />\r\n                    </div>\r\n                    <div className=\"beer-item__title\">\r\n                        <Title level={4}>{name}</Title>\r\n                    </div>\r\n                    <div className=\"beer-item__tagline\">\r\n                        <Text strong>{tagline}</Text>\r\n                    </div>\r\n                    <div className=\"beer-item__date\">\r\n                        <Text>First brewed: </Text>\r\n                        <Text strong>{brewed}</Text>\r\n                    </div>\r\n                    <Link to={`/id${id}`}>\r\n                        More info\r\n                    </Link>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Row, Empty } from \"antd\";\r\n\r\nimport { BeerItem } from \"./BeerItem\";\r\n\r\nexport const BeerItems = (props) => {\r\n    const {renderingData, isLoaded, currentPage} = props;    \r\n\r\n    if(isLoaded && renderingData.length > 0) {\r\n        return (\r\n            <Row gutter={16}>\r\n                {\r\n                    renderingData[currentPage].map(item => {\r\n                        return (\r\n                            <BeerItem\r\n                                key={item.id}\r\n                                image_url={item.image_url}\r\n                                name={item.name}\r\n                                tagline={item.tagline}\r\n                                brewed={item.first_brewed}\r\n                                id={item.id}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </Row>\r\n        )\r\n    } else {\r\n        return <Empty/>\r\n    }\r\n    \r\n};\r\n","import React from 'react';\r\nimport { Pagination } from 'antd';\r\n\r\nexport const NavPages = (props) => {\r\n    const { currentPage, paginate, totalPages } = props;    \r\n    \r\n    return(\r\n        <>\r\n            <Pagination\r\n                defaultPageSize={1}\r\n                current={currentPage}\r\n                total={totalPages}\r\n                onChange={paginate}\r\n                style={{ marginTop: \"30px\" }}\r\n            />\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { BeerItems } from '../components/BeerItems'\r\nimport { NavPages } from '../components/NavPages';\r\nimport { Input, Divider } from 'antd';\r\n\r\nconst { Search } = Input;\r\n\r\nexport const Home = (props) => {\r\n\r\n    const { \r\n        query, \r\n        changeQuery, \r\n        renderingData, \r\n        currentPage, \r\n        isLoaded,\r\n        totalPages,\r\n        paginate\r\n    } = props;\r\n    \r\n    return (\r\n        <div>\r\n            <Search\r\n                placeholder=\"Search by name\"\r\n                style={{ width: 298 }}\r\n                allowClear\r\n                value={query}\r\n                onChange={changeQuery}\r\n            />\r\n            <Divider\r\n                orientation=\"center\"\r\n                style={{ color: \"#333\", fontWeight: \"bold\" }}\r\n            >\r\n                {renderingData.flat().length} beers found\r\n            </Divider>\r\n            <BeerItems\r\n                renderingData={renderingData}\r\n                currentPage={currentPage} \r\n                isLoaded={isLoaded}\r\n            />\r\n            {totalPages > 1 ?\r\n                <NavPages \r\n                    currentPage={currentPage + 1} \r\n                    paginate={paginate} \r\n                    totalPages={totalPages}\r\n                />\r\n            : null}\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { useBottomItems } from '../shared/hooks'\r\nimport { BeerItem } from '../components/BeerItem';\r\nimport { Row, Divider } from 'antd';\r\n\r\nexport const InnerBottomItems = (props) => {\r\n    const { items, amountItems } = props;\r\n\r\n    const [renderingItems, isLoaded] = useBottomItems(items, amountItems);    \r\n\r\n    return (\r\n        <>\r\n            <Row gutter={16}>\r\n                <Divider\r\n                    orientation=\"center\"\r\n                    style={{ color: \"#333\", fontWeight: \"bold\" }}\r\n                >\r\n                    Another beers\r\n                </Divider>\r\n                {\r\n                    isLoaded ? \r\n                        <Row gutter={16}>\r\n                            {\r\n                                renderingItems.map(item => {\r\n                                    return (\r\n                                        <BeerItem\r\n                                            key={item.id}\r\n                                            image_url={item.image_url}\r\n                                            name={item.name}\r\n                                            tagline={item.tagline}\r\n                                            brewed={item.first_brewed}\r\n                                            id={item.id}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Row>\r\n                    : <div>Loading...</div>\r\n                }\r\n                \r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport const useFiltredData = (data, VISIBLE) => {\r\n    const [renderingData, setRenderingData] = useState([]);\r\n    const [query, setQuery] = useState('');    \r\n\r\n    useEffect(() => {\r\n        let filtredData = [];\r\n\r\n        let sourceData = data.filter(item =>\r\n            item.name.toLowerCase().startsWith(query.toLowerCase())\r\n        )\r\n\r\n        for (let i = 0; i < Math.ceil(sourceData.length / VISIBLE); i++) {\r\n            filtredData[i] = sourceData.slice(i * VISIBLE, i * VISIBLE + VISIBLE);\r\n        };\r\n        \r\n        setRenderingData(filtredData);\r\n                     \r\n    }, [VISIBLE, data, query])\r\n    \r\n    return [query, setQuery, renderingData];\r\n}\r\n\r\nexport const useBottomItems = (items, maxRange) => {\r\n\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [renderingItems, setRenderingItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const randomIds = [];\r\n        const tempData = [];\r\n\r\n        function getRandomItems(min, maxRange) {\r\n\r\n            for(let i = 0; randomIds.length < 4; i++) {\r\n                let randomInt =  Math.round( Math.random() * (maxRange - min) + min );\r\n\r\n                if(!randomIds.includes(randomInt)) {\r\n                    randomIds.push(randomInt)\r\n                }\r\n            }\r\n            \r\n            randomIds.map(int => {\r\n                return tempData.push(items.find(item => item['id'] === int));\r\n            });\r\n        }\r\n\r\n        getRandomItems(1, maxRange);\r\n        setRenderingItems(tempData);\r\n        setIsLoaded(true);\r\n\r\n    }, [items, maxRange])\r\n    \r\n    return [renderingItems, isLoaded];\r\n}","import React from 'react';\r\nimport { InnerBottomItems } from '../components/InnerBottomItems'\r\nimport { Empty, Row, Col, Divider, Space, Typography } from 'antd';\r\nimport { Link, useParams, useLocation } from \"react-router-dom\";\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nexport const Inner = (props) => {\r\n    const { items, isLoaded, amountItems } = props;\r\n\r\n    const location = useLocation();    \r\n\r\n    const itemParams = useParams();\r\n    const Itemid = Number(itemParams.id.slice(2));    \r\n    \r\n    const curItem = items.flat().find((el) => {\r\n        return el.id === Itemid;\r\n    });\r\n\r\n    if(isLoaded && curItem !== undefined) {\r\n        return(\r\n            <div>\r\n                <Row gutter={16}>\r\n                    <Col span={5} className=\"inner-page__image\">\r\n                        <img\r\n                            src={curItem.image_url}\r\n                            alt={curItem.name}\r\n                        />\r\n                    </Col>\r\n                    <Col span={19} className=\"inner-page__content\">\r\n                        <Title level={1}>{curItem.name}</Title>\r\n                        <Title level={2}>{curItem.tagline}</Title>\r\n                        <Title level={4}>First brewed: {curItem.first_brewed}</Title>\r\n                        <Divider orientation=\"center\" style={{ color: '#333', fontWeight: 'bold' }}>Information</Divider>\r\n                        <Row>\r\n                            <Col span={24} className=\"inner-page__description-item\">\r\n                                <Space direction=\"vertical\">\r\n                                    <Text strong>Description: </Text>\r\n                                    <Text>{curItem.description}</Text>\r\n                                </Space>\r\n                            </Col>\r\n                            <Col span={24} className=\"inner-page__description-item\">\r\n                                <Space direction=\"vertical\">\r\n                                    <Text strong>Brewers tips: </Text>\r\n                                    <Text>{curItem.brewers_tips}</Text>\r\n                                </Space>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Space direction=\"vertical\">\r\n                                    <Text strong>Food pairing:</Text>\r\n                                    <ul>\r\n                                        {\r\n                                            curItem.food_pairing.map((item, i) => <li key={i}>{item}</li>)\r\n                                        }\r\n                                    </ul>\r\n                                </Space>\r\n                                \r\n                            </Col>\r\n                        </Row>\r\n                        <Link to='/'>Back to list</Link>\r\n                    </Col>\r\n                </Row>\r\n                <InnerBottomItems items={items} amountItems={amountItems}/>\r\n            </div>\r\n        )\r\n    } else {\r\n        return(\r\n            <div className=\"not-found-container\">\r\n                <Empty />\r\n                <div className=\"not-found-container__text\">\r\n                    <div>Not found: <Text strong>{location.pathname}</Text></div>\r\n                    <div>Invalid url or id value. Max value for id: <Text strong>{amountItems}</Text></div>\r\n                    <div>Example url: <Text strong>/id1</Text></div>\r\n                </div>\r\n                <Link to='/'>Back to home page</Link>\r\n            </div>\r\n        )\r\n    }\r\n} ","import React, { useState, useEffect } from \"react\";\nimport { getData } from './shared/common'\nimport { useFiltredData } from './shared/hooks'\nimport { Header } from \"./components/Header\";\nimport { Footer } from './components/Footer'\nimport { Switch, Route, useLocation } from \"react-router-dom\";\n\nimport { Home } from './pages/Home'\nimport { Inner } from './pages/Inner'\n\nimport { Spin } from 'antd';\nimport \"antd/dist/antd.css\";\n\nconst BASE_URL = 'https://api.punkapi.com/v2/beers';\n\n// max limit = 80\n// min limit = 4\nconst AMOUNT_ITEMS = 80;\n\n// items per page\nconst VISIBLE = 8;\n\nconst useData = () => {\n    const [data, setData] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    const amount = AMOUNT_ITEMS >= 4 && AMOUNT_ITEMS <= 80 ? AMOUNT_ITEMS : 80;\n\n    useEffect(() => {\n        getData(`${BASE_URL}?per_page=${amount}`).then((result) => {\n            setData(result)\n            setIsLoaded(true);\n        });\n    }, [amount]);\n\n    return [data, isLoaded];\n}\n\nconst App = () => {\n    const [data, isLoaded] = useData();\n    const [query, setQuery, renderingData] = useFiltredData(data, VISIBLE);\n    const [currentPage, setCurrentPage] = useState(0);\n    const [totalPages, setTotalPages] = useState(0);\n\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        setTotalPages(renderingData.length)\n    }, [renderingData])\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        setQuery('');\n    }, [pathname, setQuery])\n\n    const paginate = (page) => {\n        setCurrentPage(page - 1);        \n    }\n    \n    const changeQuery = (e) => {\n        setQuery(e.target.value);\n        setTotalPages(renderingData.length);\n        setCurrentPage(0)\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"container\">\n                <Header pathname={pathname}/>\n                \n                <main>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Home\n                                query={query}\n                                changeQuery={changeQuery}\n                                renderingData={renderingData}\n                                currentPage={currentPage} \n                                isLoaded={isLoaded}\n                                paginate={paginate} \n                                totalPages={totalPages}\n                            />\n                        </Route>\n                        \n                        <Route path='/:id'>\n                            <Inner items={data} isLoaded={isLoaded} amountItems={AMOUNT_ITEMS}/>\n                        </Route>\n                    </Switch>\n                </main>\n\n                <Footer />\n\n                <div className={\"spinner \" + (isLoaded ? \"hide\" : \"show\")  } >\n                    <Spin size=\"large\" />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router basename={process.env.PUBLIC_URL}>\n            <App />\n        </Router>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}